package data;
// Generated 2017-05-06 18:08:38 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

/**
 * Produkty generated by hbm2java
 */
@Entity
@Table(name="produkty"
    ,catalog="sklep"
)
public class Produkty  implements java.io.Serializable {


     private int idProduktu;
     private Producent producent;
     private Typ typ;
     private String nazwa;
     private String parametry;
     private String opis;
     private int cena;
     private Set<Zamowienia> zamowienias = new HashSet<Zamowienia>(0);
  SessionFactory factory = new Configuration().configure().buildSessionFactory();
       Session session = factory.openSession();
    public Produkty() {
    }

	
    public Produkty(int idProduktu, Producent producent, Typ typ, String nazwa, String parametry, String opis, int cena) {
        this.idProduktu = idProduktu;
        this.producent = producent;
        this.typ = typ;
        this.nazwa = nazwa;
        this.parametry = parametry;
        this.opis = opis;
        this.cena = cena;
    }
    public Produkty(int idProduktu, Producent producent, Typ typ, String nazwa, String parametry, String opis, int cena, Set<Zamowienia> zamowienias) {
       this.idProduktu = idProduktu;
       this.producent = producent;
       this.typ = typ;
       this.nazwa = nazwa;
       this.parametry = parametry;
       this.opis = opis;
       this.cena = cena;
       this.zamowienias = zamowienias;
    }
   
     @Id 

    
    @Column(name="Id_Produktu", unique=true, nullable=false)
    public int getIdProduktu() {
        return this.idProduktu;
    }
    
    public void setIdProduktu(int idProduktu) {
        this.idProduktu = idProduktu;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Id_Producenta", nullable=false)
    public Producent getProducent() {
        return this.producent;
    }
    
    public void setProducent(Producent producent) {
        this.producent = producent;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Id_Typ", nullable=false)
    public Typ getTyp() {
        return this.typ;
    }
    
    public void setTyp(Typ typ) {
        this.typ = typ;
    }

    
    @Column(name="Nazwa", nullable=false, length=100)
    public String getNazwa() {
        return this.nazwa;
    }
    
    public void setNazwa(String nazwa) {
        this.nazwa = nazwa;
    }

    
    @Column(name="Parametry", nullable=false, length=500)
    public String getParametry() {
        return this.parametry;
    }
    
    public void setParametry(String parametry) {
        this.parametry = parametry;
    }

    
    @Column(name="Opis", nullable=false, length=350)
    public String getOpis() {
        return this.opis;
    }
    
    public void setOpis(String opis) {
        this.opis = opis;
    }

    
    @Column(name="Cena", nullable=false)
    public int getCena() {
        return this.cena;
    }
    
    public void setCena(int cena) {
        this.cena = cena;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="produkty")
    public Set<Zamowienia> getZamowienias() {
        return this.zamowienias;
    }
    
    public void setZamowienias(Set<Zamowienia> zamowienias) {
        this.zamowienias = zamowienias;
    }
 public List<Produkty> Produktylist(){
        Criteria cr = session.createCriteria(Produkty.class);
        List<Produkty> res = cr.list();
        return res;
    }
    



}


